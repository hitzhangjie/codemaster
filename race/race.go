package main

import (
	"github.com/hitzhangjie/codemaster/serialization/pb/hello"
	"google.golang.org/protobuf/proto"
)

// 这种类似datarace问题，不是像map运行时检测时实际出现冲突才冲突，它是基于ThreadSanitizer
// 的一个检测，基于时钟向量，kavaya joshi之前介绍过这个。
// 运行 go build -race && ./race，是100%可以检测出来，然后日志里扫描下这个DATA RACE关键字，
// 就可以提前发现这个问题，不至于将这个问题带到线上。
//
/*
==================
WARNING: DATA RACE
Read at 0x00c0000a21a8 by main goroutine:

	google.golang.org/protobuf/internal/impl.sizeInt32NoZero()
	    /home/zhangjie/go/pkg/mod/google.golang.org/protobuf@v1.33.0/internal/impl/codec_gen.go:644 +0x47
	google.golang.org/protobuf/internal/impl.(*MessageInfo).sizePointerSlow()
	    /home/zhangjie/go/pkg/mod/google.golang.org/protobuf@v1.33.0/internal/impl/encode.go:79 +0x345
	google.golang.org/protobuf/internal/impl.(*MessageInfo).sizePointer()
	    /home/zhangjie/go/pkg/mod/google.golang.org/protobuf@v1.33.0/internal/impl/encode.go:56 +0x149
	google.golang.org/protobuf/internal/impl.(*MessageInfo).size()
	    /home/zhangjie/go/pkg/mod/google.golang.org/protobuf@v1.33.0/internal/impl/encode.go:40 +0x8a
	google.golang.org/protobuf/internal/impl.(*MessageInfo).size-fm()
	    <autogenerated>:1 +0x5e
	google.golang.org/protobuf/proto.MarshalOptions.marshal()
	    /home/zhangjie/go/pkg/mod/google.golang.org/protobuf@v1.33.0/proto/encode.go:156 +0x1bc
	google.golang.org/protobuf/proto.Marshal()
	    /home/zhangjie/go/pkg/mod/google.golang.org/protobuf@v1.33.0/proto/encode.go:80 +0x52
	main.main()
	    /home/zhangjie/hitzhangjie/codemaster/race/race.go:19 +0x10d

Previous write at 0x00c0000a21a8 by goroutine 7:

	main.main.func1()
	    /home/zhangjie/hitzhangjie/codemaster/race/race.go:16 +0x6e

Goroutine 7 (finished) created at:

	main.main()
	    /home/zhangjie/hitzhangjie/codemaster/race/race.go:14 +0xfc

==================
==================
WARNING: DATA RACE
Read at 0x00c0000a21b0 by main goroutine:

	google.golang.org/protobuf/internal/impl.sizeStringNoZero()
	    /home/zhangjie/go/pkg/mod/google.golang.org/protobuf@v1.33.0/internal/impl/codec_gen.go:5079 +0x47
	google.golang.org/protobuf/internal/impl.(*MessageInfo).sizePointerSlow()
	    /home/zhangjie/go/pkg/mod/google.golang.org/protobuf@v1.33.0/internal/impl/encode.go:79 +0x345
	google.golang.org/protobuf/internal/impl.(*MessageInfo).sizePointer()
	    /home/zhangjie/go/pkg/mod/google.golang.org/protobuf@v1.33.0/internal/impl/encode.go:56 +0x149
	google.golang.org/protobuf/internal/impl.(*MessageInfo).size()
	    /home/zhangjie/go/pkg/mod/google.golang.org/protobuf@v1.33.0/internal/impl/encode.go:40 +0x8a
	google.golang.org/protobuf/internal/impl.(*MessageInfo).size-fm()
	    <autogenerated>:1 +0x5e
	google.golang.org/protobuf/proto.MarshalOptions.marshal()
	    /home/zhangjie/go/pkg/mod/google.golang.org/protobuf@v1.33.0/proto/encode.go:156 +0x1bc
	google.golang.org/protobuf/proto.Marshal()
	    /home/zhangjie/go/pkg/mod/google.golang.org/protobuf@v1.33.0/proto/encode.go:80 +0x52
	main.main()
	    /home/zhangjie/hitzhangjie/codemaster/race/race.go:19 +0x10d

Previous write at 0x00c0000a21b0 by goroutine 7:

	main.main.func1()
	    /home/zhangjie/hitzhangjie/codemaster/race/race.go:15 +0x35

Goroutine 7 (finished) created at:

	main.main()
	    /home/zhangjie/hitzhangjie/codemaster/race/race.go:14 +0xfc

==================
Found 2 data race(s)
*/
func main() {
	req := hello.HelloReq{
		Msg:  "hello world",
		Code: 100,
	}

	// 修改，和后续marshal 存在并发读写问题, datarace
	go func() {
		req.Msg = "hello world xxxx"
		req.Code = 200
	}()

	// 尽管存在datarace，但是如果不借助go build -race，测试期能发现点概率也比较低
	buf, err := proto.Marshal(&req)
	if err != nil {
		panic(err)
	}
	_ = buf
}
